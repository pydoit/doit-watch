name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu, windows, macos]
        python-version: ['3.8', '3.10']
        include:
          - os: ubuntu
            python-version: '3.10'
            build-dist: '1'
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - run: python -m pip install --user -U pip wheel setuptools build
      - id: pip-cache
        run: echo "::set-output name=dir::$(pip cache dir)"
      - uses: actions/cache@v3
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: |
            ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python-version }}-
            ${{ runner.os }}-pip-
      - if: matrix.build-dist == '1'
        run: |
          python -m pip install -e .[build]
          doit build
      - if: matrix.build-dist == '1'
        uses: actions/upload-artifact@v3
        with:
          name: doit-watch-dist-${{ github.run_number }}
          path: ./dist
      - run: python -m pip install -e .[test,lint,build,ci]
      - run: doit setup
      - run: doit check
      - run: doit test
      - if: matrix.build-dist == '1'
        run: codecov
